/*
 * Copyright 2014 Sandia Corporation. Under the terms of Contract
 * DE-AC04-94AL85000, there is a non-exclusive license for use of this work
 * by or on behalf of the U.S. Government. Export of this program may require
 * a license from the United States Government.
 *
 * This file is part of the Power API Prototype software package. For license
 * information, see the LICENSE file in the top level directory of the
 * distribution.
*/

#ifndef PWR_HDEEMDEV_H 
#define PWR_HDEEMDEV_H 

#include "pwr_dev.h"
#include <time.h>
#include <hdeem.h>
#include <freeipmi/freeipmi.h>



enum { /*underscores are containing the hashes generated by stringhash(), used to compare in open function*/
  CPU0=0,
  CPU1=1,
  DDR_AB=2,
  DDR_CD=3,
  DDR_EF=4,
  DDR_GH=5,
  BLADE=6,
  _CPU0=2075560,
  _CPU1=2075561,
  _DDR_AB=2012057391,
  _DDR_CD=2012057455,
  _DDR_EF=2012057519,
  _DDR_GH=2012057583,
  _BLADE=64266232,
};

typedef struct {
  hdeem_bmc_data_t * bmc;
  char name[8];
  char node[16];
  int sensor;
} hdeemFdInfo_t;


#ifdef __cplusplus
extern "C" {
#endif
/**The initialising function which is getting the initstring from the powerapi.
 * The initstring is defined in the xml-configuration file.
 * It contains the host, user and password, used for the hdeem-api.
 * e.g. <<device name="HDEEM-Dev" plugin="HDEEM" initString="taurusi4003-bmc;x;x" />
 * The correct Syntax is: host;user;password. The character ; is used as a delimiter.
 */
plugin_devops_t* pwr_hdeemdev_init(const char* initstr);
int pwr_hdeemdev_final( plugin_devops_t *dev );

/**The open function which is reading the sensor-value from the hdeem_bmc_data_t -struct.
 * It gets an openstring from the powerapi. The content of the openstring is defined in the xml-configuration-file.
 * e.g. <<dev name="hdeemdev" device="HDEEM-Dev" openString="CPU0" />
 * It looks inside the hdeem_bmc_data_t-struct and compares the name_vr_sensor value with the openstring.
 * If found, it writes the correct sensornumber into the hdeemFdInfo_t struct and returns the adress of it.
 */
hdeemFdInfo_t* pwr_hdeemdev_open( plugin_devops_t *dev, const char* openstr);

int pwr_hdeemdev_read( hdeemFdInfo_t* fd, PWR_AttrName attr, void *value, unsigned int len, PWR_Time *timestamp );
int pwr_hdeemdev_close( hdeemFdInfo_t* fd );
int pwr_hdeemdev_clear( hdeemFdInfo_t* fd );

#ifdef __cplusplus
}
#endif

#endif
